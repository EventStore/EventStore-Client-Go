// Code generated by MockGen. DO NOT EDIT.
// Source: grpc_projections_client_factory.go

// Package projections is a generated GoMock package.
package projections

import (
	reflect "reflect"

	projections "github.com/EventStore/EventStore-Client-Go/protos/projections"
	gomock "github.com/golang/mock/gomock"
	grpc "google.golang.org/grpc"
)

// MockgrpcProjectionsClientFactory is a mock of grpcProjectionsClientFactory interface.
type MockgrpcProjectionsClientFactory struct {
	ctrl     *gomock.Controller
	recorder *MockgrpcProjectionsClientFactoryMockRecorder
}

// MockgrpcProjectionsClientFactoryMockRecorder is the mock recorder for MockgrpcProjectionsClientFactory.
type MockgrpcProjectionsClientFactoryMockRecorder struct {
	mock *MockgrpcProjectionsClientFactory
}

// NewMockgrpcProjectionsClientFactory creates a new mock instance.
func NewMockgrpcProjectionsClientFactory(ctrl *gomock.Controller) *MockgrpcProjectionsClientFactory {
	mock := &MockgrpcProjectionsClientFactory{ctrl: ctrl}
	mock.recorder = &MockgrpcProjectionsClientFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockgrpcProjectionsClientFactory) EXPECT() *MockgrpcProjectionsClientFactoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockgrpcProjectionsClientFactory) Create(connection *grpc.ClientConn) projections.ProjectionsClient {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", connection)
	ret0, _ := ret[0].(projections.ProjectionsClient)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockgrpcProjectionsClientFactoryMockRecorder) Create(connection interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockgrpcProjectionsClientFactory)(nil).Create), connection)
}
