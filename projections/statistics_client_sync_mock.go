// Code generated by MockGen. DO NOT EDIT.
// Source: statistics_client_sync.go

// Package projections is a generated GoMock package.
package projections

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStatisticsClientSync is a mock of StatisticsClientSync interface.
type MockStatisticsClientSync struct {
	ctrl     *gomock.Controller
	recorder *MockStatisticsClientSyncMockRecorder
}

// MockStatisticsClientSyncMockRecorder is the mock recorder for MockStatisticsClientSync.
type MockStatisticsClientSyncMockRecorder struct {
	mock *MockStatisticsClientSync
}

// NewMockStatisticsClientSync creates a new mock instance.
func NewMockStatisticsClientSync(ctrl *gomock.Controller) *MockStatisticsClientSync {
	mock := &MockStatisticsClientSync{ctrl: ctrl}
	mock.recorder = &MockStatisticsClientSyncMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatisticsClientSync) EXPECT() *MockStatisticsClientSyncMockRecorder {
	return m.recorder
}

// Read mocks base method.
func (m *MockStatisticsClientSync) Read() (StatisticsClientResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read")
	ret0, _ := ret[0].(StatisticsClientResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockStatisticsClientSyncMockRecorder) Read() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockStatisticsClientSync)(nil).Read))
}
