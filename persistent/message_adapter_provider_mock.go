// Code generated by MockGen. DO NOT EDIT.
// Source: message_adapter_provider.go

// Package persistent is a generated GoMock package.
package persistent

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockmessageAdapterProvider is a mock of messageAdapterProvider interface.
type MockmessageAdapterProvider struct {
	ctrl     *gomock.Controller
	recorder *MockmessageAdapterProviderMockRecorder
}

// MockmessageAdapterProviderMockRecorder is the mock recorder for MockmessageAdapterProvider.
type MockmessageAdapterProviderMockRecorder struct {
	mock *MockmessageAdapterProvider
}

// NewMockmessageAdapterProvider creates a new mock instance.
func NewMockmessageAdapterProvider(ctrl *gomock.Controller) *MockmessageAdapterProvider {
	mock := &MockmessageAdapterProvider{ctrl: ctrl}
	mock.recorder = &MockmessageAdapterProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockmessageAdapterProvider) EXPECT() *MockmessageAdapterProviderMockRecorder {
	return m.recorder
}

// GetMessageAdapter mocks base method.
func (m *MockmessageAdapterProvider) GetMessageAdapter() messageAdapter {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMessageAdapter")
	ret0, _ := ret[0].(messageAdapter)
	return ret0
}

// GetMessageAdapter indicates an expected call of GetMessageAdapter.
func (mr *MockmessageAdapterProviderMockRecorder) GetMessageAdapter() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMessageAdapter", reflect.TypeOf((*MockmessageAdapterProvider)(nil).GetMessageAdapter))
}
