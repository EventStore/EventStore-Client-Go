name: tests workflow

on:
  workflow_call:
    inputs:
      esdb_version:
        required: true
        type: string

jobs:
  single_node:
    name: Single node

    strategy:
      fail-fast: false
      matrix:
        test: [Streams, PersistentSubscriptions, Expectations, Projections]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ vars.GO_VERSION }}

      - name: Generate certificates
        run: docker-compose --file docker-compose.yml up

      - name: Run Go Tests
        run: make ci CI_TARGET=Test${{ matrix.test }}
        env:
          EVENTSTORE_DOCKER_TAG_ENV: ${{ inputs.esdb_version }}
          EVENTSTORE_INSECURE: true

  secure:
    name: Secure

    strategy:
      fail-fast: false
      matrix:
        test: [Streams, PersistentSubscriptions, Projections]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ vars.GO_VERSION }}

      - name: Generate certificates
        run: docker-compose --file docker-compose.yml up

      - name: Run Go Tests
        run: make ci CI_TARGET=Test${{ matrix.test }}

        env:
          EVENTSTORE_DOCKER_TAG_ENV: ${{ inputs.esdb_version }}
          EVENTSTORE_INSECURE: false

  cluster:
    name: Cluster

    strategy:
      fail-fast: false
      matrix:
        test: [Streams, PersistentSubscriptions, Projections]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ vars.GO_VERSION }}

      - name: Set up cluster with Docker Compose
        run: |
          docker compose -f cluster-docker-compose.yml up -d
        env:
          EVENTSTORE_DOCKER_TAG_ENV: ${{ inputs.esdb_version }}

      - name: Run Go Tests
        run: make ci CI_TARGET=Test${{ matrix.test }}
        env:
          EVENTSTORE_INSECURE: false
          CLUSTER: true

      - name: Shutdown cluster
        run: docker compose -f cluster-docker-compose.yml down
        if: always()
