name: CI
on:
  pull_request:
  push:
    branches:
      - develop
jobs:
  build:
    name: Code generation & compile
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-2019, macos-10.15]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v1

    - name: Generate protos and build project (Powershell)
      if: ${{ matrix.os == 'windows-2019' }}
      run: .\build.ps1 -generateProtos
      shell: pwsh

    - name: Generate protos and build project (Bash)
      if: ${{ matrix.os != 'windows-2019' }}
      run: ./build.sh --generate-protos

  tests:
    needs: build
    name: Tests
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1

    - name: Docker Login
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | docker login -u pivonroll --password-stdin docker.pkg.github.com
        docker pull docker.pkg.github.com/eventstore/eventstore-client-grpc-testdata/eventstore-client-grpc-testdata:21.6.0-buster-slim

    - name: Tests
      run: |
        touch vars.env
        docker-compose up
#        docker-compose --file=cluster-docker-compose.yml up -d
        go test -v ./...
        docker-compose down
#        docker-compose --file=cluster-docker-compose.yml down

  linting:
    needs: tests
    name: Linting
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1

    - name: Linting
      run: go vet ./...

    - name: Code formatting checks
      run: diff -u <(echo -n) <(goimports -d ./)