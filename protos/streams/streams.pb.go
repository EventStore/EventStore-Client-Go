// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: streams.proto

package streams

import (
	shared "github.com/EventStore/EventStore-Client-Go/protos/shared"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReadReq_Options_ReadDirection int32

const (
	ReadReq_Options_Forwards  ReadReq_Options_ReadDirection = 0
	ReadReq_Options_Backwards ReadReq_Options_ReadDirection = 1
)

// Enum value maps for ReadReq_Options_ReadDirection.
var (
	ReadReq_Options_ReadDirection_name = map[int32]string{
		0: "Forwards",
		1: "Backwards",
	}
	ReadReq_Options_ReadDirection_value = map[string]int32{
		"Forwards":  0,
		"Backwards": 1,
	}
)

func (x ReadReq_Options_ReadDirection) Enum() *ReadReq_Options_ReadDirection {
	p := new(ReadReq_Options_ReadDirection)
	*p = x
	return p
}

func (x ReadReq_Options_ReadDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReadReq_Options_ReadDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_streams_proto_enumTypes[0].Descriptor()
}

func (ReadReq_Options_ReadDirection) Type() protoreflect.EnumType {
	return &file_streams_proto_enumTypes[0]
}

func (x ReadReq_Options_ReadDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReadReq_Options_ReadDirection.Descriptor instead.
func (ReadReq_Options_ReadDirection) EnumDescriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{0, 0, 0}
}

type ReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options *ReadReq_Options `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *ReadReq) Reset() {
	*x = ReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReq) ProtoMessage() {}

func (x *ReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReq.ProtoReflect.Descriptor instead.
func (*ReadReq) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{0}
}

func (x *ReadReq) GetOptions() *ReadReq_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type ReadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//	*ReadResp_Event
	//	*ReadResp_Confirmation
	//	*ReadResp_Checkpoint_
	//	*ReadResp_StreamNotFound_
	Content isReadResp_Content `protobuf_oneof:"content"`
}

func (x *ReadResp) Reset() {
	*x = ReadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResp) ProtoMessage() {}

func (x *ReadResp) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResp.ProtoReflect.Descriptor instead.
func (*ReadResp) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{1}
}

func (m *ReadResp) GetContent() isReadResp_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *ReadResp) GetEvent() *ReadResp_ReadEvent {
	if x, ok := x.GetContent().(*ReadResp_Event); ok {
		return x.Event
	}
	return nil
}

func (x *ReadResp) GetConfirmation() *ReadResp_SubscriptionConfirmation {
	if x, ok := x.GetContent().(*ReadResp_Confirmation); ok {
		return x.Confirmation
	}
	return nil
}

func (x *ReadResp) GetCheckpoint() *ReadResp_Checkpoint {
	if x, ok := x.GetContent().(*ReadResp_Checkpoint_); ok {
		return x.Checkpoint
	}
	return nil
}

func (x *ReadResp) GetStreamNotFound() *ReadResp_StreamNotFound {
	if x, ok := x.GetContent().(*ReadResp_StreamNotFound_); ok {
		return x.StreamNotFound
	}
	return nil
}

type isReadResp_Content interface {
	isReadResp_Content()
}

type ReadResp_Event struct {
	Event *ReadResp_ReadEvent `protobuf:"bytes,1,opt,name=event,proto3,oneof"`
}

type ReadResp_Confirmation struct {
	Confirmation *ReadResp_SubscriptionConfirmation `protobuf:"bytes,2,opt,name=confirmation,proto3,oneof"`
}

type ReadResp_Checkpoint_ struct {
	Checkpoint *ReadResp_Checkpoint `protobuf:"bytes,3,opt,name=checkpoint,proto3,oneof"`
}

type ReadResp_StreamNotFound_ struct {
	StreamNotFound *ReadResp_StreamNotFound `protobuf:"bytes,4,opt,name=stream_not_found,json=streamNotFound,proto3,oneof"`
}

func (*ReadResp_Event) isReadResp_Content() {}

func (*ReadResp_Confirmation) isReadResp_Content() {}

func (*ReadResp_Checkpoint_) isReadResp_Content() {}

func (*ReadResp_StreamNotFound_) isReadResp_Content() {}

type AppendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//	*AppendReq_Options_
	//	*AppendReq_ProposedMessage_
	Content isAppendReq_Content `protobuf_oneof:"content"`
}

func (x *AppendReq) Reset() {
	*x = AppendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendReq) ProtoMessage() {}

func (x *AppendReq) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendReq.ProtoReflect.Descriptor instead.
func (*AppendReq) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{2}
}

func (m *AppendReq) GetContent() isAppendReq_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *AppendReq) GetOptions() *AppendReq_Options {
	if x, ok := x.GetContent().(*AppendReq_Options_); ok {
		return x.Options
	}
	return nil
}

func (x *AppendReq) GetProposedMessage() *AppendReq_ProposedMessage {
	if x, ok := x.GetContent().(*AppendReq_ProposedMessage_); ok {
		return x.ProposedMessage
	}
	return nil
}

type isAppendReq_Content interface {
	isAppendReq_Content()
}

type AppendReq_Options_ struct {
	Options *AppendReq_Options `protobuf:"bytes,1,opt,name=options,proto3,oneof"`
}

type AppendReq_ProposedMessage_ struct {
	ProposedMessage *AppendReq_ProposedMessage `protobuf:"bytes,2,opt,name=proposed_message,json=proposedMessage,proto3,oneof"`
}

func (*AppendReq_Options_) isAppendReq_Content() {}

func (*AppendReq_ProposedMessage_) isAppendReq_Content() {}

type AppendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//	*AppendResp_Success_
	//	*AppendResp_WrongExpectedVersion_
	Result isAppendResp_Result `protobuf_oneof:"result"`
}

func (x *AppendResp) Reset() {
	*x = AppendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendResp) ProtoMessage() {}

func (x *AppendResp) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendResp.ProtoReflect.Descriptor instead.
func (*AppendResp) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{3}
}

func (m *AppendResp) GetResult() isAppendResp_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *AppendResp) GetSuccess() *AppendResp_Success {
	if x, ok := x.GetResult().(*AppendResp_Success_); ok {
		return x.Success
	}
	return nil
}

func (x *AppendResp) GetWrongExpectedVersion() *AppendResp_WrongExpectedVersion {
	if x, ok := x.GetResult().(*AppendResp_WrongExpectedVersion_); ok {
		return x.WrongExpectedVersion
	}
	return nil
}

type isAppendResp_Result interface {
	isAppendResp_Result()
}

type AppendResp_Success_ struct {
	Success *AppendResp_Success `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type AppendResp_WrongExpectedVersion_ struct {
	WrongExpectedVersion *AppendResp_WrongExpectedVersion `protobuf:"bytes,2,opt,name=wrong_expected_version,json=wrongExpectedVersion,proto3,oneof"`
}

func (*AppendResp_Success_) isAppendResp_Result() {}

func (*AppendResp_WrongExpectedVersion_) isAppendResp_Result() {}

type DeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options *DeleteReq_Options `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *DeleteReq) Reset() {
	*x = DeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReq) ProtoMessage() {}

func (x *DeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReq.ProtoReflect.Descriptor instead.
func (*DeleteReq) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteReq) GetOptions() *DeleteReq_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type DeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to PositionOption:
	//	*DeleteResp_Position_
	//	*DeleteResp_NoPosition
	PositionOption isDeleteResp_PositionOption `protobuf_oneof:"position_option"`
}

func (x *DeleteResp) Reset() {
	*x = DeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResp) ProtoMessage() {}

func (x *DeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResp.ProtoReflect.Descriptor instead.
func (*DeleteResp) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{5}
}

func (m *DeleteResp) GetPositionOption() isDeleteResp_PositionOption {
	if m != nil {
		return m.PositionOption
	}
	return nil
}

func (x *DeleteResp) GetPosition() *DeleteResp_Position {
	if x, ok := x.GetPositionOption().(*DeleteResp_Position_); ok {
		return x.Position
	}
	return nil
}

func (x *DeleteResp) GetNoPosition() *shared.Empty {
	if x, ok := x.GetPositionOption().(*DeleteResp_NoPosition); ok {
		return x.NoPosition
	}
	return nil
}

type isDeleteResp_PositionOption interface {
	isDeleteResp_PositionOption()
}

type DeleteResp_Position_ struct {
	Position *DeleteResp_Position `protobuf:"bytes,1,opt,name=position,proto3,oneof"`
}

type DeleteResp_NoPosition struct {
	NoPosition *shared.Empty `protobuf:"bytes,2,opt,name=no_position,json=noPosition,proto3,oneof"`
}

func (*DeleteResp_Position_) isDeleteResp_PositionOption() {}

func (*DeleteResp_NoPosition) isDeleteResp_PositionOption() {}

type TombstoneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options *TombstoneReq_Options `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *TombstoneReq) Reset() {
	*x = TombstoneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TombstoneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TombstoneReq) ProtoMessage() {}

func (x *TombstoneReq) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TombstoneReq.ProtoReflect.Descriptor instead.
func (*TombstoneReq) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{6}
}

func (x *TombstoneReq) GetOptions() *TombstoneReq_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type TombstoneResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to PositionOption:
	//	*TombstoneResp_Position_
	//	*TombstoneResp_NoPosition
	PositionOption isTombstoneResp_PositionOption `protobuf_oneof:"position_option"`
}

func (x *TombstoneResp) Reset() {
	*x = TombstoneResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TombstoneResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TombstoneResp) ProtoMessage() {}

func (x *TombstoneResp) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TombstoneResp.ProtoReflect.Descriptor instead.
func (*TombstoneResp) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{7}
}

func (m *TombstoneResp) GetPositionOption() isTombstoneResp_PositionOption {
	if m != nil {
		return m.PositionOption
	}
	return nil
}

func (x *TombstoneResp) GetPosition() *TombstoneResp_Position {
	if x, ok := x.GetPositionOption().(*TombstoneResp_Position_); ok {
		return x.Position
	}
	return nil
}

func (x *TombstoneResp) GetNoPosition() *shared.Empty {
	if x, ok := x.GetPositionOption().(*TombstoneResp_NoPosition); ok {
		return x.NoPosition
	}
	return nil
}

type isTombstoneResp_PositionOption interface {
	isTombstoneResp_PositionOption()
}

type TombstoneResp_Position_ struct {
	Position *TombstoneResp_Position `protobuf:"bytes,1,opt,name=position,proto3,oneof"`
}

type TombstoneResp_NoPosition struct {
	NoPosition *shared.Empty `protobuf:"bytes,2,opt,name=no_position,json=noPosition,proto3,oneof"`
}

func (*TombstoneResp_Position_) isTombstoneResp_PositionOption() {}

func (*TombstoneResp_NoPosition) isTombstoneResp_PositionOption() {}

type ReadReq_Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to StreamOption:
	//	*ReadReq_Options_Stream
	//	*ReadReq_Options_All
	StreamOption  isReadReq_Options_StreamOption `protobuf_oneof:"stream_option"`
	ReadDirection ReadReq_Options_ReadDirection  `protobuf:"varint,3,opt,name=read_direction,json=readDirection,proto3,enum=event_store.client.streams.ReadReq_Options_ReadDirection" json:"read_direction,omitempty"`
	ResolveLinks  bool                           `protobuf:"varint,4,opt,name=resolve_links,json=resolveLinks,proto3" json:"resolve_links,omitempty"`
	// Types that are assignable to CountOption:
	//	*ReadReq_Options_Count
	//	*ReadReq_Options_Subscription
	CountOption isReadReq_Options_CountOption `protobuf_oneof:"count_option"`
	// Types that are assignable to FilterOption:
	//	*ReadReq_Options_Filter
	//	*ReadReq_Options_NoFilter
	FilterOption isReadReq_Options_FilterOption `protobuf_oneof:"filter_option"`
	UuidOption   *ReadReq_Options_UUIDOption    `protobuf:"bytes,9,opt,name=uuid_option,json=uuidOption,proto3" json:"uuid_option,omitempty"`
}

func (x *ReadReq_Options) Reset() {
	*x = ReadReq_Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadReq_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReq_Options) ProtoMessage() {}

func (x *ReadReq_Options) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReq_Options.ProtoReflect.Descriptor instead.
func (*ReadReq_Options) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{0, 0}
}

func (m *ReadReq_Options) GetStreamOption() isReadReq_Options_StreamOption {
	if m != nil {
		return m.StreamOption
	}
	return nil
}

func (x *ReadReq_Options) GetStream() *ReadReq_Options_StreamOptions {
	if x, ok := x.GetStreamOption().(*ReadReq_Options_Stream); ok {
		return x.Stream
	}
	return nil
}

func (x *ReadReq_Options) GetAll() *ReadReq_Options_AllOptions {
	if x, ok := x.GetStreamOption().(*ReadReq_Options_All); ok {
		return x.All
	}
	return nil
}

func (x *ReadReq_Options) GetReadDirection() ReadReq_Options_ReadDirection {
	if x != nil {
		return x.ReadDirection
	}
	return ReadReq_Options_Forwards
}

func (x *ReadReq_Options) GetResolveLinks() bool {
	if x != nil {
		return x.ResolveLinks
	}
	return false
}

func (m *ReadReq_Options) GetCountOption() isReadReq_Options_CountOption {
	if m != nil {
		return m.CountOption
	}
	return nil
}

func (x *ReadReq_Options) GetCount() uint64 {
	if x, ok := x.GetCountOption().(*ReadReq_Options_Count); ok {
		return x.Count
	}
	return 0
}

func (x *ReadReq_Options) GetSubscription() *ReadReq_Options_SubscriptionOptions {
	if x, ok := x.GetCountOption().(*ReadReq_Options_Subscription); ok {
		return x.Subscription
	}
	return nil
}

func (m *ReadReq_Options) GetFilterOption() isReadReq_Options_FilterOption {
	if m != nil {
		return m.FilterOption
	}
	return nil
}

func (x *ReadReq_Options) GetFilter() *ReadReq_Options_FilterOptions {
	if x, ok := x.GetFilterOption().(*ReadReq_Options_Filter); ok {
		return x.Filter
	}
	return nil
}

func (x *ReadReq_Options) GetNoFilter() *shared.Empty {
	if x, ok := x.GetFilterOption().(*ReadReq_Options_NoFilter); ok {
		return x.NoFilter
	}
	return nil
}

func (x *ReadReq_Options) GetUuidOption() *ReadReq_Options_UUIDOption {
	if x != nil {
		return x.UuidOption
	}
	return nil
}

type isReadReq_Options_StreamOption interface {
	isReadReq_Options_StreamOption()
}

type ReadReq_Options_Stream struct {
	Stream *ReadReq_Options_StreamOptions `protobuf:"bytes,1,opt,name=stream,proto3,oneof"`
}

type ReadReq_Options_All struct {
	All *ReadReq_Options_AllOptions `protobuf:"bytes,2,opt,name=all,proto3,oneof"`
}

func (*ReadReq_Options_Stream) isReadReq_Options_StreamOption() {}

func (*ReadReq_Options_All) isReadReq_Options_StreamOption() {}

type isReadReq_Options_CountOption interface {
	isReadReq_Options_CountOption()
}

type ReadReq_Options_Count struct {
	Count uint64 `protobuf:"varint,5,opt,name=count,proto3,oneof"`
}

type ReadReq_Options_Subscription struct {
	Subscription *ReadReq_Options_SubscriptionOptions `protobuf:"bytes,6,opt,name=subscription,proto3,oneof"`
}

func (*ReadReq_Options_Count) isReadReq_Options_CountOption() {}

func (*ReadReq_Options_Subscription) isReadReq_Options_CountOption() {}

type isReadReq_Options_FilterOption interface {
	isReadReq_Options_FilterOption()
}

type ReadReq_Options_Filter struct {
	Filter *ReadReq_Options_FilterOptions `protobuf:"bytes,7,opt,name=filter,proto3,oneof"`
}

type ReadReq_Options_NoFilter struct {
	NoFilter *shared.Empty `protobuf:"bytes,8,opt,name=no_filter,json=noFilter,proto3,oneof"`
}

func (*ReadReq_Options_Filter) isReadReq_Options_FilterOption() {}

func (*ReadReq_Options_NoFilter) isReadReq_Options_FilterOption() {}

type ReadReq_Options_StreamOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamIdentifier *shared.StreamIdentifier `protobuf:"bytes,1,opt,name=stream_identifier,json=streamIdentifier,proto3" json:"stream_identifier,omitempty"`
	// Types that are assignable to RevisionOption:
	//	*ReadReq_Options_StreamOptions_Revision
	//	*ReadReq_Options_StreamOptions_Start
	//	*ReadReq_Options_StreamOptions_End
	RevisionOption isReadReq_Options_StreamOptions_RevisionOption `protobuf_oneof:"revision_option"`
}

func (x *ReadReq_Options_StreamOptions) Reset() {
	*x = ReadReq_Options_StreamOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadReq_Options_StreamOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReq_Options_StreamOptions) ProtoMessage() {}

func (x *ReadReq_Options_StreamOptions) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReq_Options_StreamOptions.ProtoReflect.Descriptor instead.
func (*ReadReq_Options_StreamOptions) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *ReadReq_Options_StreamOptions) GetStreamIdentifier() *shared.StreamIdentifier {
	if x != nil {
		return x.StreamIdentifier
	}
	return nil
}

func (m *ReadReq_Options_StreamOptions) GetRevisionOption() isReadReq_Options_StreamOptions_RevisionOption {
	if m != nil {
		return m.RevisionOption
	}
	return nil
}

func (x *ReadReq_Options_StreamOptions) GetRevision() uint64 {
	if x, ok := x.GetRevisionOption().(*ReadReq_Options_StreamOptions_Revision); ok {
		return x.Revision
	}
	return 0
}

func (x *ReadReq_Options_StreamOptions) GetStart() *shared.Empty {
	if x, ok := x.GetRevisionOption().(*ReadReq_Options_StreamOptions_Start); ok {
		return x.Start
	}
	return nil
}

func (x *ReadReq_Options_StreamOptions) GetEnd() *shared.Empty {
	if x, ok := x.GetRevisionOption().(*ReadReq_Options_StreamOptions_End); ok {
		return x.End
	}
	return nil
}

type isReadReq_Options_StreamOptions_RevisionOption interface {
	isReadReq_Options_StreamOptions_RevisionOption()
}

type ReadReq_Options_StreamOptions_Revision struct {
	Revision uint64 `protobuf:"varint,2,opt,name=revision,proto3,oneof"`
}

type ReadReq_Options_StreamOptions_Start struct {
	Start *shared.Empty `protobuf:"bytes,3,opt,name=start,proto3,oneof"`
}

type ReadReq_Options_StreamOptions_End struct {
	End *shared.Empty `protobuf:"bytes,4,opt,name=end,proto3,oneof"`
}

func (*ReadReq_Options_StreamOptions_Revision) isReadReq_Options_StreamOptions_RevisionOption() {}

func (*ReadReq_Options_StreamOptions_Start) isReadReq_Options_StreamOptions_RevisionOption() {}

func (*ReadReq_Options_StreamOptions_End) isReadReq_Options_StreamOptions_RevisionOption() {}

type ReadReq_Options_AllOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to AllOption:
	//	*ReadReq_Options_AllOptions_Position
	//	*ReadReq_Options_AllOptions_Start
	//	*ReadReq_Options_AllOptions_End
	AllOption isReadReq_Options_AllOptions_AllOption `protobuf_oneof:"all_option"`
}

func (x *ReadReq_Options_AllOptions) Reset() {
	*x = ReadReq_Options_AllOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadReq_Options_AllOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReq_Options_AllOptions) ProtoMessage() {}

func (x *ReadReq_Options_AllOptions) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReq_Options_AllOptions.ProtoReflect.Descriptor instead.
func (*ReadReq_Options_AllOptions) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (m *ReadReq_Options_AllOptions) GetAllOption() isReadReq_Options_AllOptions_AllOption {
	if m != nil {
		return m.AllOption
	}
	return nil
}

func (x *ReadReq_Options_AllOptions) GetPosition() *ReadReq_Options_Position {
	if x, ok := x.GetAllOption().(*ReadReq_Options_AllOptions_Position); ok {
		return x.Position
	}
	return nil
}

func (x *ReadReq_Options_AllOptions) GetStart() *shared.Empty {
	if x, ok := x.GetAllOption().(*ReadReq_Options_AllOptions_Start); ok {
		return x.Start
	}
	return nil
}

func (x *ReadReq_Options_AllOptions) GetEnd() *shared.Empty {
	if x, ok := x.GetAllOption().(*ReadReq_Options_AllOptions_End); ok {
		return x.End
	}
	return nil
}

type isReadReq_Options_AllOptions_AllOption interface {
	isReadReq_Options_AllOptions_AllOption()
}

type ReadReq_Options_AllOptions_Position struct {
	Position *ReadReq_Options_Position `protobuf:"bytes,1,opt,name=position,proto3,oneof"`
}

type ReadReq_Options_AllOptions_Start struct {
	Start *shared.Empty `protobuf:"bytes,2,opt,name=start,proto3,oneof"`
}

type ReadReq_Options_AllOptions_End struct {
	End *shared.Empty `protobuf:"bytes,3,opt,name=end,proto3,oneof"`
}

func (*ReadReq_Options_AllOptions_Position) isReadReq_Options_AllOptions_AllOption() {}

func (*ReadReq_Options_AllOptions_Start) isReadReq_Options_AllOptions_AllOption() {}

func (*ReadReq_Options_AllOptions_End) isReadReq_Options_AllOptions_AllOption() {}

type ReadReq_Options_SubscriptionOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadReq_Options_SubscriptionOptions) Reset() {
	*x = ReadReq_Options_SubscriptionOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadReq_Options_SubscriptionOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReq_Options_SubscriptionOptions) ProtoMessage() {}

func (x *ReadReq_Options_SubscriptionOptions) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReq_Options_SubscriptionOptions.ProtoReflect.Descriptor instead.
func (*ReadReq_Options_SubscriptionOptions) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{0, 0, 2}
}

type ReadReq_Options_Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommitPosition  uint64 `protobuf:"varint,1,opt,name=commit_position,json=commitPosition,proto3" json:"commit_position,omitempty"`
	PreparePosition uint64 `protobuf:"varint,2,opt,name=prepare_position,json=preparePosition,proto3" json:"prepare_position,omitempty"`
}

func (x *ReadReq_Options_Position) Reset() {
	*x = ReadReq_Options_Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadReq_Options_Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReq_Options_Position) ProtoMessage() {}

func (x *ReadReq_Options_Position) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReq_Options_Position.ProtoReflect.Descriptor instead.
func (*ReadReq_Options_Position) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{0, 0, 3}
}

func (x *ReadReq_Options_Position) GetCommitPosition() uint64 {
	if x != nil {
		return x.CommitPosition
	}
	return 0
}

func (x *ReadReq_Options_Position) GetPreparePosition() uint64 {
	if x != nil {
		return x.PreparePosition
	}
	return 0
}

type ReadReq_Options_FilterOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Filter:
	//	*ReadReq_Options_FilterOptions_StreamIdentifier
	//	*ReadReq_Options_FilterOptions_EventType
	Filter isReadReq_Options_FilterOptions_Filter `protobuf_oneof:"filter"`
	// Types that are assignable to Window:
	//	*ReadReq_Options_FilterOptions_Max
	//	*ReadReq_Options_FilterOptions_Count
	Window                       isReadReq_Options_FilterOptions_Window `protobuf_oneof:"window"`
	CheckpointIntervalMultiplier uint32                                 `protobuf:"varint,5,opt,name=checkpointIntervalMultiplier,proto3" json:"checkpointIntervalMultiplier,omitempty"`
}

func (x *ReadReq_Options_FilterOptions) Reset() {
	*x = ReadReq_Options_FilterOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadReq_Options_FilterOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReq_Options_FilterOptions) ProtoMessage() {}

func (x *ReadReq_Options_FilterOptions) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReq_Options_FilterOptions.ProtoReflect.Descriptor instead.
func (*ReadReq_Options_FilterOptions) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{0, 0, 4}
}

func (m *ReadReq_Options_FilterOptions) GetFilter() isReadReq_Options_FilterOptions_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *ReadReq_Options_FilterOptions) GetStreamIdentifier() *ReadReq_Options_FilterOptions_Expression {
	if x, ok := x.GetFilter().(*ReadReq_Options_FilterOptions_StreamIdentifier); ok {
		return x.StreamIdentifier
	}
	return nil
}

func (x *ReadReq_Options_FilterOptions) GetEventType() *ReadReq_Options_FilterOptions_Expression {
	if x, ok := x.GetFilter().(*ReadReq_Options_FilterOptions_EventType); ok {
		return x.EventType
	}
	return nil
}

func (m *ReadReq_Options_FilterOptions) GetWindow() isReadReq_Options_FilterOptions_Window {
	if m != nil {
		return m.Window
	}
	return nil
}

func (x *ReadReq_Options_FilterOptions) GetMax() uint32 {
	if x, ok := x.GetWindow().(*ReadReq_Options_FilterOptions_Max); ok {
		return x.Max
	}
	return 0
}

func (x *ReadReq_Options_FilterOptions) GetCount() *shared.Empty {
	if x, ok := x.GetWindow().(*ReadReq_Options_FilterOptions_Count); ok {
		return x.Count
	}
	return nil
}

func (x *ReadReq_Options_FilterOptions) GetCheckpointIntervalMultiplier() uint32 {
	if x != nil {
		return x.CheckpointIntervalMultiplier
	}
	return 0
}

type isReadReq_Options_FilterOptions_Filter interface {
	isReadReq_Options_FilterOptions_Filter()
}

type ReadReq_Options_FilterOptions_StreamIdentifier struct {
	StreamIdentifier *ReadReq_Options_FilterOptions_Expression `protobuf:"bytes,1,opt,name=stream_identifier,json=streamIdentifier,proto3,oneof"`
}

type ReadReq_Options_FilterOptions_EventType struct {
	EventType *ReadReq_Options_FilterOptions_Expression `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3,oneof"`
}

func (*ReadReq_Options_FilterOptions_StreamIdentifier) isReadReq_Options_FilterOptions_Filter() {}

func (*ReadReq_Options_FilterOptions_EventType) isReadReq_Options_FilterOptions_Filter() {}

type isReadReq_Options_FilterOptions_Window interface {
	isReadReq_Options_FilterOptions_Window()
}

type ReadReq_Options_FilterOptions_Max struct {
	Max uint32 `protobuf:"varint,3,opt,name=max,proto3,oneof"`
}

type ReadReq_Options_FilterOptions_Count struct {
	Count *shared.Empty `protobuf:"bytes,4,opt,name=count,proto3,oneof"`
}

func (*ReadReq_Options_FilterOptions_Max) isReadReq_Options_FilterOptions_Window() {}

func (*ReadReq_Options_FilterOptions_Count) isReadReq_Options_FilterOptions_Window() {}

type ReadReq_Options_UUIDOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//	*ReadReq_Options_UUIDOption_Structured
	//	*ReadReq_Options_UUIDOption_String_
	Content isReadReq_Options_UUIDOption_Content `protobuf_oneof:"content"`
}

func (x *ReadReq_Options_UUIDOption) Reset() {
	*x = ReadReq_Options_UUIDOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadReq_Options_UUIDOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReq_Options_UUIDOption) ProtoMessage() {}

func (x *ReadReq_Options_UUIDOption) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReq_Options_UUIDOption.ProtoReflect.Descriptor instead.
func (*ReadReq_Options_UUIDOption) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{0, 0, 5}
}

func (m *ReadReq_Options_UUIDOption) GetContent() isReadReq_Options_UUIDOption_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *ReadReq_Options_UUIDOption) GetStructured() *shared.Empty {
	if x, ok := x.GetContent().(*ReadReq_Options_UUIDOption_Structured); ok {
		return x.Structured
	}
	return nil
}

func (x *ReadReq_Options_UUIDOption) GetString_() *shared.Empty {
	if x, ok := x.GetContent().(*ReadReq_Options_UUIDOption_String_); ok {
		return x.String_
	}
	return nil
}

type isReadReq_Options_UUIDOption_Content interface {
	isReadReq_Options_UUIDOption_Content()
}

type ReadReq_Options_UUIDOption_Structured struct {
	Structured *shared.Empty `protobuf:"bytes,1,opt,name=structured,proto3,oneof"`
}

type ReadReq_Options_UUIDOption_String_ struct {
	String_ *shared.Empty `protobuf:"bytes,2,opt,name=string,proto3,oneof"`
}

func (*ReadReq_Options_UUIDOption_Structured) isReadReq_Options_UUIDOption_Content() {}

func (*ReadReq_Options_UUIDOption_String_) isReadReq_Options_UUIDOption_Content() {}

type ReadReq_Options_FilterOptions_Expression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regex  string   `protobuf:"bytes,1,opt,name=regex,proto3" json:"regex,omitempty"`
	Prefix []string `protobuf:"bytes,2,rep,name=prefix,proto3" json:"prefix,omitempty"`
}

func (x *ReadReq_Options_FilterOptions_Expression) Reset() {
	*x = ReadReq_Options_FilterOptions_Expression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadReq_Options_FilterOptions_Expression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReq_Options_FilterOptions_Expression) ProtoMessage() {}

func (x *ReadReq_Options_FilterOptions_Expression) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReq_Options_FilterOptions_Expression.ProtoReflect.Descriptor instead.
func (*ReadReq_Options_FilterOptions_Expression) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{0, 0, 4, 0}
}

func (x *ReadReq_Options_FilterOptions_Expression) GetRegex() string {
	if x != nil {
		return x.Regex
	}
	return ""
}

func (x *ReadReq_Options_FilterOptions_Expression) GetPrefix() []string {
	if x != nil {
		return x.Prefix
	}
	return nil
}

type ReadResp_ReadEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *ReadResp_ReadEvent_RecordedEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Link  *ReadResp_ReadEvent_RecordedEvent `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	// Types that are assignable to Position:
	//	*ReadResp_ReadEvent_CommitPosition
	//	*ReadResp_ReadEvent_NoPosition
	Position isReadResp_ReadEvent_Position `protobuf_oneof:"position"`
}

func (x *ReadResp_ReadEvent) Reset() {
	*x = ReadResp_ReadEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadResp_ReadEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResp_ReadEvent) ProtoMessage() {}

func (x *ReadResp_ReadEvent) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResp_ReadEvent.ProtoReflect.Descriptor instead.
func (*ReadResp_ReadEvent) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ReadResp_ReadEvent) GetEvent() *ReadResp_ReadEvent_RecordedEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *ReadResp_ReadEvent) GetLink() *ReadResp_ReadEvent_RecordedEvent {
	if x != nil {
		return x.Link
	}
	return nil
}

func (m *ReadResp_ReadEvent) GetPosition() isReadResp_ReadEvent_Position {
	if m != nil {
		return m.Position
	}
	return nil
}

func (x *ReadResp_ReadEvent) GetCommitPosition() uint64 {
	if x, ok := x.GetPosition().(*ReadResp_ReadEvent_CommitPosition); ok {
		return x.CommitPosition
	}
	return 0
}

func (x *ReadResp_ReadEvent) GetNoPosition() *shared.Empty {
	if x, ok := x.GetPosition().(*ReadResp_ReadEvent_NoPosition); ok {
		return x.NoPosition
	}
	return nil
}

type isReadResp_ReadEvent_Position interface {
	isReadResp_ReadEvent_Position()
}

type ReadResp_ReadEvent_CommitPosition struct {
	CommitPosition uint64 `protobuf:"varint,3,opt,name=commit_position,json=commitPosition,proto3,oneof"`
}

type ReadResp_ReadEvent_NoPosition struct {
	NoPosition *shared.Empty `protobuf:"bytes,4,opt,name=no_position,json=noPosition,proto3,oneof"`
}

func (*ReadResp_ReadEvent_CommitPosition) isReadResp_ReadEvent_Position() {}

func (*ReadResp_ReadEvent_NoPosition) isReadResp_ReadEvent_Position() {}

type ReadResp_SubscriptionConfirmation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId string `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
}

func (x *ReadResp_SubscriptionConfirmation) Reset() {
	*x = ReadResp_SubscriptionConfirmation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadResp_SubscriptionConfirmation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResp_SubscriptionConfirmation) ProtoMessage() {}

func (x *ReadResp_SubscriptionConfirmation) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResp_SubscriptionConfirmation.ProtoReflect.Descriptor instead.
func (*ReadResp_SubscriptionConfirmation) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ReadResp_SubscriptionConfirmation) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type ReadResp_Checkpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommitPosition  uint64 `protobuf:"varint,1,opt,name=commit_position,json=commitPosition,proto3" json:"commit_position,omitempty"`
	PreparePosition uint64 `protobuf:"varint,2,opt,name=prepare_position,json=preparePosition,proto3" json:"prepare_position,omitempty"`
}

func (x *ReadResp_Checkpoint) Reset() {
	*x = ReadResp_Checkpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadResp_Checkpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResp_Checkpoint) ProtoMessage() {}

func (x *ReadResp_Checkpoint) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResp_Checkpoint.ProtoReflect.Descriptor instead.
func (*ReadResp_Checkpoint) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{1, 2}
}

func (x *ReadResp_Checkpoint) GetCommitPosition() uint64 {
	if x != nil {
		return x.CommitPosition
	}
	return 0
}

func (x *ReadResp_Checkpoint) GetPreparePosition() uint64 {
	if x != nil {
		return x.PreparePosition
	}
	return 0
}

type ReadResp_StreamNotFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamIdentifier *shared.StreamIdentifier `protobuf:"bytes,1,opt,name=stream_identifier,json=streamIdentifier,proto3" json:"stream_identifier,omitempty"`
}

func (x *ReadResp_StreamNotFound) Reset() {
	*x = ReadResp_StreamNotFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadResp_StreamNotFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResp_StreamNotFound) ProtoMessage() {}

func (x *ReadResp_StreamNotFound) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResp_StreamNotFound.ProtoReflect.Descriptor instead.
func (*ReadResp_StreamNotFound) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{1, 3}
}

func (x *ReadResp_StreamNotFound) GetStreamIdentifier() *shared.StreamIdentifier {
	if x != nil {
		return x.StreamIdentifier
	}
	return nil
}

type ReadResp_ReadEvent_RecordedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               *shared.UUID             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StreamIdentifier *shared.StreamIdentifier `protobuf:"bytes,2,opt,name=stream_identifier,json=streamIdentifier,proto3" json:"stream_identifier,omitempty"`
	StreamRevision   uint64                   `protobuf:"varint,3,opt,name=stream_revision,json=streamRevision,proto3" json:"stream_revision,omitempty"`
	PreparePosition  uint64                   `protobuf:"varint,4,opt,name=prepare_position,json=preparePosition,proto3" json:"prepare_position,omitempty"`
	CommitPosition   uint64                   `protobuf:"varint,5,opt,name=commit_position,json=commitPosition,proto3" json:"commit_position,omitempty"`
	Metadata         map[string]string        `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CustomMetadata   []byte                   `protobuf:"bytes,7,opt,name=custom_metadata,json=customMetadata,proto3" json:"custom_metadata,omitempty"`
	Data             []byte                   `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ReadResp_ReadEvent_RecordedEvent) Reset() {
	*x = ReadResp_ReadEvent_RecordedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadResp_ReadEvent_RecordedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResp_ReadEvent_RecordedEvent) ProtoMessage() {}

func (x *ReadResp_ReadEvent_RecordedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResp_ReadEvent_RecordedEvent.ProtoReflect.Descriptor instead.
func (*ReadResp_ReadEvent_RecordedEvent) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *ReadResp_ReadEvent_RecordedEvent) GetId() *shared.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ReadResp_ReadEvent_RecordedEvent) GetStreamIdentifier() *shared.StreamIdentifier {
	if x != nil {
		return x.StreamIdentifier
	}
	return nil
}

func (x *ReadResp_ReadEvent_RecordedEvent) GetStreamRevision() uint64 {
	if x != nil {
		return x.StreamRevision
	}
	return 0
}

func (x *ReadResp_ReadEvent_RecordedEvent) GetPreparePosition() uint64 {
	if x != nil {
		return x.PreparePosition
	}
	return 0
}

func (x *ReadResp_ReadEvent_RecordedEvent) GetCommitPosition() uint64 {
	if x != nil {
		return x.CommitPosition
	}
	return 0
}

func (x *ReadResp_ReadEvent_RecordedEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ReadResp_ReadEvent_RecordedEvent) GetCustomMetadata() []byte {
	if x != nil {
		return x.CustomMetadata
	}
	return nil
}

func (x *ReadResp_ReadEvent_RecordedEvent) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AppendReq_Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamIdentifier *shared.StreamIdentifier `protobuf:"bytes,1,opt,name=stream_identifier,json=streamIdentifier,proto3" json:"stream_identifier,omitempty"`
	// Types that are assignable to ExpectedStreamRevision:
	//	*AppendReq_Options_Revision
	//	*AppendReq_Options_NoStream
	//	*AppendReq_Options_Any
	//	*AppendReq_Options_StreamExists
	ExpectedStreamRevision isAppendReq_Options_ExpectedStreamRevision `protobuf_oneof:"expected_stream_revision"`
}

func (x *AppendReq_Options) Reset() {
	*x = AppendReq_Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendReq_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendReq_Options) ProtoMessage() {}

func (x *AppendReq_Options) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendReq_Options.ProtoReflect.Descriptor instead.
func (*AppendReq_Options) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{2, 0}
}

func (x *AppendReq_Options) GetStreamIdentifier() *shared.StreamIdentifier {
	if x != nil {
		return x.StreamIdentifier
	}
	return nil
}

func (m *AppendReq_Options) GetExpectedStreamRevision() isAppendReq_Options_ExpectedStreamRevision {
	if m != nil {
		return m.ExpectedStreamRevision
	}
	return nil
}

func (x *AppendReq_Options) GetRevision() uint64 {
	if x, ok := x.GetExpectedStreamRevision().(*AppendReq_Options_Revision); ok {
		return x.Revision
	}
	return 0
}

func (x *AppendReq_Options) GetNoStream() *shared.Empty {
	if x, ok := x.GetExpectedStreamRevision().(*AppendReq_Options_NoStream); ok {
		return x.NoStream
	}
	return nil
}

func (x *AppendReq_Options) GetAny() *shared.Empty {
	if x, ok := x.GetExpectedStreamRevision().(*AppendReq_Options_Any); ok {
		return x.Any
	}
	return nil
}

func (x *AppendReq_Options) GetStreamExists() *shared.Empty {
	if x, ok := x.GetExpectedStreamRevision().(*AppendReq_Options_StreamExists); ok {
		return x.StreamExists
	}
	return nil
}

type isAppendReq_Options_ExpectedStreamRevision interface {
	isAppendReq_Options_ExpectedStreamRevision()
}

type AppendReq_Options_Revision struct {
	Revision uint64 `protobuf:"varint,2,opt,name=revision,proto3,oneof"`
}

type AppendReq_Options_NoStream struct {
	NoStream *shared.Empty `protobuf:"bytes,3,opt,name=no_stream,json=noStream,proto3,oneof"`
}

type AppendReq_Options_Any struct {
	Any *shared.Empty `protobuf:"bytes,4,opt,name=any,proto3,oneof"`
}

type AppendReq_Options_StreamExists struct {
	StreamExists *shared.Empty `protobuf:"bytes,5,opt,name=stream_exists,json=streamExists,proto3,oneof"`
}

func (*AppendReq_Options_Revision) isAppendReq_Options_ExpectedStreamRevision() {}

func (*AppendReq_Options_NoStream) isAppendReq_Options_ExpectedStreamRevision() {}

func (*AppendReq_Options_Any) isAppendReq_Options_ExpectedStreamRevision() {}

func (*AppendReq_Options_StreamExists) isAppendReq_Options_ExpectedStreamRevision() {}

type AppendReq_ProposedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *shared.UUID      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Metadata       map[string]string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CustomMetadata []byte            `protobuf:"bytes,3,opt,name=custom_metadata,json=customMetadata,proto3" json:"custom_metadata,omitempty"`
	Data           []byte            `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AppendReq_ProposedMessage) Reset() {
	*x = AppendReq_ProposedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendReq_ProposedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendReq_ProposedMessage) ProtoMessage() {}

func (x *AppendReq_ProposedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendReq_ProposedMessage.ProtoReflect.Descriptor instead.
func (*AppendReq_ProposedMessage) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{2, 1}
}

func (x *AppendReq_ProposedMessage) GetId() *shared.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AppendReq_ProposedMessage) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AppendReq_ProposedMessage) GetCustomMetadata() []byte {
	if x != nil {
		return x.CustomMetadata
	}
	return nil
}

func (x *AppendReq_ProposedMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AppendResp_Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommitPosition  uint64 `protobuf:"varint,1,opt,name=commit_position,json=commitPosition,proto3" json:"commit_position,omitempty"`
	PreparePosition uint64 `protobuf:"varint,2,opt,name=prepare_position,json=preparePosition,proto3" json:"prepare_position,omitempty"`
}

func (x *AppendResp_Position) Reset() {
	*x = AppendResp_Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendResp_Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendResp_Position) ProtoMessage() {}

func (x *AppendResp_Position) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendResp_Position.ProtoReflect.Descriptor instead.
func (*AppendResp_Position) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{3, 0}
}

func (x *AppendResp_Position) GetCommitPosition() uint64 {
	if x != nil {
		return x.CommitPosition
	}
	return 0
}

func (x *AppendResp_Position) GetPreparePosition() uint64 {
	if x != nil {
		return x.PreparePosition
	}
	return 0
}

type AppendResp_Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to CurrentRevisionOption:
	//	*AppendResp_Success_CurrentRevision
	//	*AppendResp_Success_NoStream
	CurrentRevisionOption isAppendResp_Success_CurrentRevisionOption `protobuf_oneof:"current_revision_option"`
	// Types that are assignable to PositionOption:
	//	*AppendResp_Success_Position
	//	*AppendResp_Success_NoPosition
	PositionOption isAppendResp_Success_PositionOption `protobuf_oneof:"position_option"`
}

func (x *AppendResp_Success) Reset() {
	*x = AppendResp_Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendResp_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendResp_Success) ProtoMessage() {}

func (x *AppendResp_Success) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendResp_Success.ProtoReflect.Descriptor instead.
func (*AppendResp_Success) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{3, 1}
}

func (m *AppendResp_Success) GetCurrentRevisionOption() isAppendResp_Success_CurrentRevisionOption {
	if m != nil {
		return m.CurrentRevisionOption
	}
	return nil
}

func (x *AppendResp_Success) GetCurrentRevision() uint64 {
	if x, ok := x.GetCurrentRevisionOption().(*AppendResp_Success_CurrentRevision); ok {
		return x.CurrentRevision
	}
	return 0
}

func (x *AppendResp_Success) GetNoStream() *shared.Empty {
	if x, ok := x.GetCurrentRevisionOption().(*AppendResp_Success_NoStream); ok {
		return x.NoStream
	}
	return nil
}

func (m *AppendResp_Success) GetPositionOption() isAppendResp_Success_PositionOption {
	if m != nil {
		return m.PositionOption
	}
	return nil
}

func (x *AppendResp_Success) GetPosition() *AppendResp_Position {
	if x, ok := x.GetPositionOption().(*AppendResp_Success_Position); ok {
		return x.Position
	}
	return nil
}

func (x *AppendResp_Success) GetNoPosition() *shared.Empty {
	if x, ok := x.GetPositionOption().(*AppendResp_Success_NoPosition); ok {
		return x.NoPosition
	}
	return nil
}

type isAppendResp_Success_CurrentRevisionOption interface {
	isAppendResp_Success_CurrentRevisionOption()
}

type AppendResp_Success_CurrentRevision struct {
	CurrentRevision uint64 `protobuf:"varint,1,opt,name=current_revision,json=currentRevision,proto3,oneof"`
}

type AppendResp_Success_NoStream struct {
	NoStream *shared.Empty `protobuf:"bytes,2,opt,name=no_stream,json=noStream,proto3,oneof"`
}

func (*AppendResp_Success_CurrentRevision) isAppendResp_Success_CurrentRevisionOption() {}

func (*AppendResp_Success_NoStream) isAppendResp_Success_CurrentRevisionOption() {}

type isAppendResp_Success_PositionOption interface {
	isAppendResp_Success_PositionOption()
}

type AppendResp_Success_Position struct {
	Position *AppendResp_Position `protobuf:"bytes,3,opt,name=position,proto3,oneof"`
}

type AppendResp_Success_NoPosition struct {
	NoPosition *shared.Empty `protobuf:"bytes,4,opt,name=no_position,json=noPosition,proto3,oneof"`
}

func (*AppendResp_Success_Position) isAppendResp_Success_PositionOption() {}

func (*AppendResp_Success_NoPosition) isAppendResp_Success_PositionOption() {}

type AppendResp_WrongExpectedVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to CurrentRevisionOption:
	//	*AppendResp_WrongExpectedVersion_CurrentRevision
	//	*AppendResp_WrongExpectedVersion_NoStream
	CurrentRevisionOption isAppendResp_WrongExpectedVersion_CurrentRevisionOption `protobuf_oneof:"current_revision_option"`
	// Types that are assignable to ExpectedRevisionOption:
	//	*AppendResp_WrongExpectedVersion_ExpectedRevision
	//	*AppendResp_WrongExpectedVersion_Any
	//	*AppendResp_WrongExpectedVersion_StreamExists
	ExpectedRevisionOption isAppendResp_WrongExpectedVersion_ExpectedRevisionOption `protobuf_oneof:"expected_revision_option"`
}

func (x *AppendResp_WrongExpectedVersion) Reset() {
	*x = AppendResp_WrongExpectedVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendResp_WrongExpectedVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendResp_WrongExpectedVersion) ProtoMessage() {}

func (x *AppendResp_WrongExpectedVersion) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendResp_WrongExpectedVersion.ProtoReflect.Descriptor instead.
func (*AppendResp_WrongExpectedVersion) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{3, 2}
}

func (m *AppendResp_WrongExpectedVersion) GetCurrentRevisionOption() isAppendResp_WrongExpectedVersion_CurrentRevisionOption {
	if m != nil {
		return m.CurrentRevisionOption
	}
	return nil
}

func (x *AppendResp_WrongExpectedVersion) GetCurrentRevision() uint64 {
	if x, ok := x.GetCurrentRevisionOption().(*AppendResp_WrongExpectedVersion_CurrentRevision); ok {
		return x.CurrentRevision
	}
	return 0
}

func (x *AppendResp_WrongExpectedVersion) GetNoStream() *shared.Empty {
	if x, ok := x.GetCurrentRevisionOption().(*AppendResp_WrongExpectedVersion_NoStream); ok {
		return x.NoStream
	}
	return nil
}

func (m *AppendResp_WrongExpectedVersion) GetExpectedRevisionOption() isAppendResp_WrongExpectedVersion_ExpectedRevisionOption {
	if m != nil {
		return m.ExpectedRevisionOption
	}
	return nil
}

func (x *AppendResp_WrongExpectedVersion) GetExpectedRevision() uint64 {
	if x, ok := x.GetExpectedRevisionOption().(*AppendResp_WrongExpectedVersion_ExpectedRevision); ok {
		return x.ExpectedRevision
	}
	return 0
}

func (x *AppendResp_WrongExpectedVersion) GetAny() *shared.Empty {
	if x, ok := x.GetExpectedRevisionOption().(*AppendResp_WrongExpectedVersion_Any); ok {
		return x.Any
	}
	return nil
}

func (x *AppendResp_WrongExpectedVersion) GetStreamExists() *shared.Empty {
	if x, ok := x.GetExpectedRevisionOption().(*AppendResp_WrongExpectedVersion_StreamExists); ok {
		return x.StreamExists
	}
	return nil
}

type isAppendResp_WrongExpectedVersion_CurrentRevisionOption interface {
	isAppendResp_WrongExpectedVersion_CurrentRevisionOption()
}

type AppendResp_WrongExpectedVersion_CurrentRevision struct {
	CurrentRevision uint64 `protobuf:"varint,1,opt,name=current_revision,json=currentRevision,proto3,oneof"`
}

type AppendResp_WrongExpectedVersion_NoStream struct {
	NoStream *shared.Empty `protobuf:"bytes,2,opt,name=no_stream,json=noStream,proto3,oneof"`
}

func (*AppendResp_WrongExpectedVersion_CurrentRevision) isAppendResp_WrongExpectedVersion_CurrentRevisionOption() {
}

func (*AppendResp_WrongExpectedVersion_NoStream) isAppendResp_WrongExpectedVersion_CurrentRevisionOption() {
}

type isAppendResp_WrongExpectedVersion_ExpectedRevisionOption interface {
	isAppendResp_WrongExpectedVersion_ExpectedRevisionOption()
}

type AppendResp_WrongExpectedVersion_ExpectedRevision struct {
	ExpectedRevision uint64 `protobuf:"varint,3,opt,name=expected_revision,json=expectedRevision,proto3,oneof"`
}

type AppendResp_WrongExpectedVersion_Any struct {
	Any *shared.Empty `protobuf:"bytes,4,opt,name=any,proto3,oneof"`
}

type AppendResp_WrongExpectedVersion_StreamExists struct {
	StreamExists *shared.Empty `protobuf:"bytes,5,opt,name=stream_exists,json=streamExists,proto3,oneof"`
}

func (*AppendResp_WrongExpectedVersion_ExpectedRevision) isAppendResp_WrongExpectedVersion_ExpectedRevisionOption() {
}

func (*AppendResp_WrongExpectedVersion_Any) isAppendResp_WrongExpectedVersion_ExpectedRevisionOption() {
}

func (*AppendResp_WrongExpectedVersion_StreamExists) isAppendResp_WrongExpectedVersion_ExpectedRevisionOption() {
}

type DeleteReq_Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamIdentifier *shared.StreamIdentifier `protobuf:"bytes,1,opt,name=stream_identifier,json=streamIdentifier,proto3" json:"stream_identifier,omitempty"`
	// Types that are assignable to ExpectedStreamRevision:
	//	*DeleteReq_Options_Revision
	//	*DeleteReq_Options_NoStream
	//	*DeleteReq_Options_Any
	//	*DeleteReq_Options_StreamExists
	ExpectedStreamRevision isDeleteReq_Options_ExpectedStreamRevision `protobuf_oneof:"expected_stream_revision"`
}

func (x *DeleteReq_Options) Reset() {
	*x = DeleteReq_Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReq_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReq_Options) ProtoMessage() {}

func (x *DeleteReq_Options) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReq_Options.ProtoReflect.Descriptor instead.
func (*DeleteReq_Options) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{4, 0}
}

func (x *DeleteReq_Options) GetStreamIdentifier() *shared.StreamIdentifier {
	if x != nil {
		return x.StreamIdentifier
	}
	return nil
}

func (m *DeleteReq_Options) GetExpectedStreamRevision() isDeleteReq_Options_ExpectedStreamRevision {
	if m != nil {
		return m.ExpectedStreamRevision
	}
	return nil
}

func (x *DeleteReq_Options) GetRevision() uint64 {
	if x, ok := x.GetExpectedStreamRevision().(*DeleteReq_Options_Revision); ok {
		return x.Revision
	}
	return 0
}

func (x *DeleteReq_Options) GetNoStream() *shared.Empty {
	if x, ok := x.GetExpectedStreamRevision().(*DeleteReq_Options_NoStream); ok {
		return x.NoStream
	}
	return nil
}

func (x *DeleteReq_Options) GetAny() *shared.Empty {
	if x, ok := x.GetExpectedStreamRevision().(*DeleteReq_Options_Any); ok {
		return x.Any
	}
	return nil
}

func (x *DeleteReq_Options) GetStreamExists() *shared.Empty {
	if x, ok := x.GetExpectedStreamRevision().(*DeleteReq_Options_StreamExists); ok {
		return x.StreamExists
	}
	return nil
}

type isDeleteReq_Options_ExpectedStreamRevision interface {
	isDeleteReq_Options_ExpectedStreamRevision()
}

type DeleteReq_Options_Revision struct {
	Revision uint64 `protobuf:"varint,2,opt,name=revision,proto3,oneof"`
}

type DeleteReq_Options_NoStream struct {
	NoStream *shared.Empty `protobuf:"bytes,3,opt,name=no_stream,json=noStream,proto3,oneof"`
}

type DeleteReq_Options_Any struct {
	Any *shared.Empty `protobuf:"bytes,4,opt,name=any,proto3,oneof"`
}

type DeleteReq_Options_StreamExists struct {
	StreamExists *shared.Empty `protobuf:"bytes,5,opt,name=stream_exists,json=streamExists,proto3,oneof"`
}

func (*DeleteReq_Options_Revision) isDeleteReq_Options_ExpectedStreamRevision() {}

func (*DeleteReq_Options_NoStream) isDeleteReq_Options_ExpectedStreamRevision() {}

func (*DeleteReq_Options_Any) isDeleteReq_Options_ExpectedStreamRevision() {}

func (*DeleteReq_Options_StreamExists) isDeleteReq_Options_ExpectedStreamRevision() {}

type DeleteResp_Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommitPosition  uint64 `protobuf:"varint,1,opt,name=commit_position,json=commitPosition,proto3" json:"commit_position,omitempty"`
	PreparePosition uint64 `protobuf:"varint,2,opt,name=prepare_position,json=preparePosition,proto3" json:"prepare_position,omitempty"`
}

func (x *DeleteResp_Position) Reset() {
	*x = DeleteResp_Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResp_Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResp_Position) ProtoMessage() {}

func (x *DeleteResp_Position) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResp_Position.ProtoReflect.Descriptor instead.
func (*DeleteResp_Position) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{5, 0}
}

func (x *DeleteResp_Position) GetCommitPosition() uint64 {
	if x != nil {
		return x.CommitPosition
	}
	return 0
}

func (x *DeleteResp_Position) GetPreparePosition() uint64 {
	if x != nil {
		return x.PreparePosition
	}
	return 0
}

type TombstoneReq_Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamIdentifier *shared.StreamIdentifier `protobuf:"bytes,1,opt,name=stream_identifier,json=streamIdentifier,proto3" json:"stream_identifier,omitempty"`
	// Types that are assignable to ExpectedStreamRevision:
	//	*TombstoneReq_Options_Revision
	//	*TombstoneReq_Options_NoStream
	//	*TombstoneReq_Options_Any
	//	*TombstoneReq_Options_StreamExists
	ExpectedStreamRevision isTombstoneReq_Options_ExpectedStreamRevision `protobuf_oneof:"expected_stream_revision"`
}

func (x *TombstoneReq_Options) Reset() {
	*x = TombstoneReq_Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TombstoneReq_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TombstoneReq_Options) ProtoMessage() {}

func (x *TombstoneReq_Options) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TombstoneReq_Options.ProtoReflect.Descriptor instead.
func (*TombstoneReq_Options) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{6, 0}
}

func (x *TombstoneReq_Options) GetStreamIdentifier() *shared.StreamIdentifier {
	if x != nil {
		return x.StreamIdentifier
	}
	return nil
}

func (m *TombstoneReq_Options) GetExpectedStreamRevision() isTombstoneReq_Options_ExpectedStreamRevision {
	if m != nil {
		return m.ExpectedStreamRevision
	}
	return nil
}

func (x *TombstoneReq_Options) GetRevision() uint64 {
	if x, ok := x.GetExpectedStreamRevision().(*TombstoneReq_Options_Revision); ok {
		return x.Revision
	}
	return 0
}

func (x *TombstoneReq_Options) GetNoStream() *shared.Empty {
	if x, ok := x.GetExpectedStreamRevision().(*TombstoneReq_Options_NoStream); ok {
		return x.NoStream
	}
	return nil
}

func (x *TombstoneReq_Options) GetAny() *shared.Empty {
	if x, ok := x.GetExpectedStreamRevision().(*TombstoneReq_Options_Any); ok {
		return x.Any
	}
	return nil
}

func (x *TombstoneReq_Options) GetStreamExists() *shared.Empty {
	if x, ok := x.GetExpectedStreamRevision().(*TombstoneReq_Options_StreamExists); ok {
		return x.StreamExists
	}
	return nil
}

type isTombstoneReq_Options_ExpectedStreamRevision interface {
	isTombstoneReq_Options_ExpectedStreamRevision()
}

type TombstoneReq_Options_Revision struct {
	Revision uint64 `protobuf:"varint,2,opt,name=revision,proto3,oneof"`
}

type TombstoneReq_Options_NoStream struct {
	NoStream *shared.Empty `protobuf:"bytes,3,opt,name=no_stream,json=noStream,proto3,oneof"`
}

type TombstoneReq_Options_Any struct {
	Any *shared.Empty `protobuf:"bytes,4,opt,name=any,proto3,oneof"`
}

type TombstoneReq_Options_StreamExists struct {
	StreamExists *shared.Empty `protobuf:"bytes,5,opt,name=stream_exists,json=streamExists,proto3,oneof"`
}

func (*TombstoneReq_Options_Revision) isTombstoneReq_Options_ExpectedStreamRevision() {}

func (*TombstoneReq_Options_NoStream) isTombstoneReq_Options_ExpectedStreamRevision() {}

func (*TombstoneReq_Options_Any) isTombstoneReq_Options_ExpectedStreamRevision() {}

func (*TombstoneReq_Options_StreamExists) isTombstoneReq_Options_ExpectedStreamRevision() {}

type TombstoneResp_Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommitPosition  uint64 `protobuf:"varint,1,opt,name=commit_position,json=commitPosition,proto3" json:"commit_position,omitempty"`
	PreparePosition uint64 `protobuf:"varint,2,opt,name=prepare_position,json=preparePosition,proto3" json:"prepare_position,omitempty"`
}

func (x *TombstoneResp_Position) Reset() {
	*x = TombstoneResp_Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streams_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TombstoneResp_Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TombstoneResp_Position) ProtoMessage() {}

func (x *TombstoneResp_Position) ProtoReflect() protoreflect.Message {
	mi := &file_streams_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TombstoneResp_Position.ProtoReflect.Descriptor instead.
func (*TombstoneResp_Position) Descriptor() ([]byte, []int) {
	return file_streams_proto_rawDescGZIP(), []int{7, 0}
}

func (x *TombstoneResp_Position) GetCommitPosition() uint64 {
	if x != nil {
		return x.CommitPosition
	}
	return 0
}

func (x *TombstoneResp_Position) GetPreparePosition() uint64 {
	if x != nil {
		return x.PreparePosition
	}
	return 0
}

var File_streams_proto protoreflect.FileDescriptor

var file_streams_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x1a, 0x0c, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x10, 0x0a, 0x07, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x45, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xce, 0x0f, 0x0a,
	0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x53, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x2e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x4a, 0x0a,
	0x03, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x2e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x60, 0x0a, 0x0e, 0x72, 0x65, 0x61,
	0x64, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x39, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x72, 0x65,
	0x61, 0x64, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x12, 0x16, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x01, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x65, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48,
	0x01, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x53, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x39, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x02, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x09, 0x6e, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x02, 0x52, 0x08, 0x6e, 0x6f, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x57, 0x0a, 0x0b, 0x75, 0x75, 0x69, 0x64, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x2e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x75, 0x75, 0x69, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x8a,
	0x02, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x58, 0x0a, 0x11, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x10, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x08, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x08,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x34, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x48, 0x00, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xde, 0x01, 0x0a, 0x0a,
	0x41, 0x6c, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x52, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48,
	0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x42, 0x0c,
	0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x15, 0x0a, 0x13,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x5e, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x70,
	0x61, 0x72, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0xcd, 0x03, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x73, 0x0a, 0x11, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x44, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x65, 0x0a, 0x0a, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01,
	0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x38, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x01, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x42, 0x0a, 0x1c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x69, 0x65, 0x72, 0x1a, 0x3a, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x42,
	0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x77, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x1a, 0x97, 0x01, 0x0a, 0x0a, 0x55, 0x55, 0x49, 0x44, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x2c, 0x0a,
	0x0d, 0x52, 0x65, 0x61, 0x64, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c,
	0x0a, 0x08, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x73, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x73, 0x10, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0f, 0x0a, 0x0d,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb5, 0x0b,
	0x0a, 0x08, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x63, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x5f, 0x0a, 0x10, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x1a, 0xa9, 0x06, 0x0a, 0x09,
	0x52, 0x65, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x50, 0x0a,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12,
	0x29, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0b, 0x6e, 0x6f,
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x48, 0x00, 0x52, 0x0a, 0x6e, 0x6f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0xf9, 0x03, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x2f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x58, 0x0a, 0x11, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x10, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65,
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x66, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b,
	0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x43, 0x0a, 0x18, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x60, 0x0a, 0x0a,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x5f, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x70,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x6a,
	0x0a, 0x0e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x58, 0x0a, 0x11, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x10, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xc5, 0x06, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x49, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x73, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x62,
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0xdd, 0x02, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x58,
	0x0a, 0x11, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x10, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x09, 0x6e, 0x6f, 0x5f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x08, 0x6e,
	0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x34, 0x0a, 0x03, 0x61, 0x6e, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6e, 0x79, 0x12, 0x47, 0x0a,
	0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x42, 0x1a, 0x0a, 0x18, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x1a, 0x9d, 0x02, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x55,
	0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x5f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xdf, 0x07,
	0x0a, 0x0a, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x73, 0x0a, 0x16, 0x77, 0x72, 0x6f, 0x6e,
	0x67, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x2e, 0x57, 0x72, 0x6f, 0x6e, 0x67, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x14, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x45, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x5e, 0x0a,
	0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x70, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xb9, 0x02,
	0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x10, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x09, 0x6e, 0x6f, 0x5f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x08, 0x6e,
	0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x4d, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0b, 0x6e, 0x6f, 0x5f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x01, 0x52,
	0x0a, 0x6e, 0x6f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x19, 0x0a, 0x17, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x11, 0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xe9, 0x02, 0x0a, 0x14, 0x57, 0x72,
	0x6f, 0x6e, 0x67, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x3f, 0x0a, 0x09, 0x6e, 0x6f, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x12, 0x2d, 0x0a, 0x11, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x10, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x34, 0x0a, 0x03, 0x61, 0x6e, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x01,
	0x52, 0x03, 0x61, 0x6e, 0x79, 0x12, 0x47, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x01,
	0x52, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x42, 0x19,
	0x0a, 0x17, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x1a, 0x0a, 0x18, 0x65, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xb4, 0x03, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x47, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xdd, 0x02, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x58, 0x0a, 0x11, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x10, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x08,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00,
	0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x09, 0x6e, 0x6f,
	0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48,
	0x00, 0x52, 0x08, 0x6e, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x34, 0x0a, 0x03, 0x61,
	0x6e, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6e,
	0x79, 0x12, 0x47, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x65, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x42, 0x1a, 0x0a, 0x18, 0x65, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x93, 0x02, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0b, 0x6e, 0x6f, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x6e,
	0x6f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x5e, 0x0a, 0x08, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29,
	0x0a, 0x10, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x11, 0x0a, 0x0f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xba, 0x03, 0x0a,
	0x0c, 0x54, 0x6f, 0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x4a, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x54, 0x6f, 0x6d, 0x62,
	0x73, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xdd, 0x02, 0x0a, 0x07, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x58, 0x0a, 0x11, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x10, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a,
	0x09, 0x6e, 0x6f, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x34,
	0x0a, 0x03, 0x61, 0x6e, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52,
	0x03, 0x61, 0x6e, 0x79, 0x12, 0x47, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52,
	0x0c, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x42, 0x1a, 0x0a,
	0x18, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x99, 0x02, 0x0a, 0x0d, 0x54, 0x6f,
	0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x54, 0x6f, 0x6d, 0x62, 0x73,
	0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a,
	0x0b, 0x6e, 0x6f, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x6e, 0x6f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x5e, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x11, 0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xf4, 0x02, 0x0a, 0x07, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x73, 0x12, 0x53, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x24,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x30, 0x01, 0x12, 0x59, 0x0a, 0x06, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x12, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x41, 0x70,
	0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x28,
	0x01, 0x12, 0x57, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x26, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x09, 0x54, 0x6f,
	0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x73, 0x2e, 0x54, 0x6f, 0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x29, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x54,
	0x6f, 0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x62, 0x0a, 0x25,
	0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x64,
	0x62, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x73, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2d, 0x47,
	0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_streams_proto_rawDescOnce sync.Once
	file_streams_proto_rawDescData = file_streams_proto_rawDesc
)

func file_streams_proto_rawDescGZIP() []byte {
	file_streams_proto_rawDescOnce.Do(func() {
		file_streams_proto_rawDescData = protoimpl.X.CompressGZIP(file_streams_proto_rawDescData)
	})
	return file_streams_proto_rawDescData
}

var file_streams_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_streams_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_streams_proto_goTypes = []interface{}{
	(ReadReq_Options_ReadDirection)(0),               // 0: event_store.client.streams.ReadReq.Options.ReadDirection
	(*ReadReq)(nil),                                  // 1: event_store.client.streams.ReadReq
	(*ReadResp)(nil),                                 // 2: event_store.client.streams.ReadResp
	(*AppendReq)(nil),                                // 3: event_store.client.streams.AppendReq
	(*AppendResp)(nil),                               // 4: event_store.client.streams.AppendResp
	(*DeleteReq)(nil),                                // 5: event_store.client.streams.DeleteReq
	(*DeleteResp)(nil),                               // 6: event_store.client.streams.DeleteResp
	(*TombstoneReq)(nil),                             // 7: event_store.client.streams.TombstoneReq
	(*TombstoneResp)(nil),                            // 8: event_store.client.streams.TombstoneResp
	(*ReadReq_Options)(nil),                          // 9: event_store.client.streams.ReadReq.Options
	(*ReadReq_Options_StreamOptions)(nil),            // 10: event_store.client.streams.ReadReq.Options.StreamOptions
	(*ReadReq_Options_AllOptions)(nil),               // 11: event_store.client.streams.ReadReq.Options.AllOptions
	(*ReadReq_Options_SubscriptionOptions)(nil),      // 12: event_store.client.streams.ReadReq.Options.SubscriptionOptions
	(*ReadReq_Options_Position)(nil),                 // 13: event_store.client.streams.ReadReq.Options.Position
	(*ReadReq_Options_FilterOptions)(nil),            // 14: event_store.client.streams.ReadReq.Options.FilterOptions
	(*ReadReq_Options_UUIDOption)(nil),               // 15: event_store.client.streams.ReadReq.Options.UUIDOption
	(*ReadReq_Options_FilterOptions_Expression)(nil), // 16: event_store.client.streams.ReadReq.Options.FilterOptions.Expression
	(*ReadResp_ReadEvent)(nil),                       // 17: event_store.client.streams.ReadResp.ReadEvent
	(*ReadResp_SubscriptionConfirmation)(nil),        // 18: event_store.client.streams.ReadResp.SubscriptionConfirmation
	(*ReadResp_Checkpoint)(nil),                      // 19: event_store.client.streams.ReadResp.Checkpoint
	(*ReadResp_StreamNotFound)(nil),                  // 20: event_store.client.streams.ReadResp.StreamNotFound
	(*ReadResp_ReadEvent_RecordedEvent)(nil),         // 21: event_store.client.streams.ReadResp.ReadEvent.RecordedEvent
	nil,                                              // 22: event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.MetadataEntry
	(*AppendReq_Options)(nil),                        // 23: event_store.client.streams.AppendReq.Options
	(*AppendReq_ProposedMessage)(nil),                // 24: event_store.client.streams.AppendReq.ProposedMessage
	nil,                                              // 25: event_store.client.streams.AppendReq.ProposedMessage.MetadataEntry
	(*AppendResp_Position)(nil),                      // 26: event_store.client.streams.AppendResp.Position
	(*AppendResp_Success)(nil),                       // 27: event_store.client.streams.AppendResp.Success
	(*AppendResp_WrongExpectedVersion)(nil),          // 28: event_store.client.streams.AppendResp.WrongExpectedVersion
	(*DeleteReq_Options)(nil),                        // 29: event_store.client.streams.DeleteReq.Options
	(*DeleteResp_Position)(nil),                      // 30: event_store.client.streams.DeleteResp.Position
	(*TombstoneReq_Options)(nil),                     // 31: event_store.client.streams.TombstoneReq.Options
	(*TombstoneResp_Position)(nil),                   // 32: event_store.client.streams.TombstoneResp.Position
	(*shared.Empty)(nil),                             // 33: event_store.client.shared.Empty
	(*shared.StreamIdentifier)(nil),                  // 34: event_store.client.shared.StreamIdentifier
	(*shared.UUID)(nil),                              // 35: event_store.client.shared.UUID
}
var file_streams_proto_depIdxs = []int32{
	9,  // 0: event_store.client.streams.ReadReq.options:type_name -> event_store.client.streams.ReadReq.Options
	17, // 1: event_store.client.streams.ReadResp.event:type_name -> event_store.client.streams.ReadResp.ReadEvent
	18, // 2: event_store.client.streams.ReadResp.confirmation:type_name -> event_store.client.streams.ReadResp.SubscriptionConfirmation
	19, // 3: event_store.client.streams.ReadResp.checkpoint:type_name -> event_store.client.streams.ReadResp.Checkpoint
	20, // 4: event_store.client.streams.ReadResp.stream_not_found:type_name -> event_store.client.streams.ReadResp.StreamNotFound
	23, // 5: event_store.client.streams.AppendReq.options:type_name -> event_store.client.streams.AppendReq.Options
	24, // 6: event_store.client.streams.AppendReq.proposed_message:type_name -> event_store.client.streams.AppendReq.ProposedMessage
	27, // 7: event_store.client.streams.AppendResp.success:type_name -> event_store.client.streams.AppendResp.Success
	28, // 8: event_store.client.streams.AppendResp.wrong_expected_version:type_name -> event_store.client.streams.AppendResp.WrongExpectedVersion
	29, // 9: event_store.client.streams.DeleteReq.options:type_name -> event_store.client.streams.DeleteReq.Options
	30, // 10: event_store.client.streams.DeleteResp.position:type_name -> event_store.client.streams.DeleteResp.Position
	33, // 11: event_store.client.streams.DeleteResp.no_position:type_name -> event_store.client.shared.Empty
	31, // 12: event_store.client.streams.TombstoneReq.options:type_name -> event_store.client.streams.TombstoneReq.Options
	32, // 13: event_store.client.streams.TombstoneResp.position:type_name -> event_store.client.streams.TombstoneResp.Position
	33, // 14: event_store.client.streams.TombstoneResp.no_position:type_name -> event_store.client.shared.Empty
	10, // 15: event_store.client.streams.ReadReq.Options.stream:type_name -> event_store.client.streams.ReadReq.Options.StreamOptions
	11, // 16: event_store.client.streams.ReadReq.Options.all:type_name -> event_store.client.streams.ReadReq.Options.AllOptions
	0,  // 17: event_store.client.streams.ReadReq.Options.read_direction:type_name -> event_store.client.streams.ReadReq.Options.ReadDirection
	12, // 18: event_store.client.streams.ReadReq.Options.subscription:type_name -> event_store.client.streams.ReadReq.Options.SubscriptionOptions
	14, // 19: event_store.client.streams.ReadReq.Options.filter:type_name -> event_store.client.streams.ReadReq.Options.FilterOptions
	33, // 20: event_store.client.streams.ReadReq.Options.no_filter:type_name -> event_store.client.shared.Empty
	15, // 21: event_store.client.streams.ReadReq.Options.uuid_option:type_name -> event_store.client.streams.ReadReq.Options.UUIDOption
	34, // 22: event_store.client.streams.ReadReq.Options.StreamOptions.stream_identifier:type_name -> event_store.client.shared.StreamIdentifier
	33, // 23: event_store.client.streams.ReadReq.Options.StreamOptions.start:type_name -> event_store.client.shared.Empty
	33, // 24: event_store.client.streams.ReadReq.Options.StreamOptions.end:type_name -> event_store.client.shared.Empty
	13, // 25: event_store.client.streams.ReadReq.Options.AllOptions.position:type_name -> event_store.client.streams.ReadReq.Options.Position
	33, // 26: event_store.client.streams.ReadReq.Options.AllOptions.start:type_name -> event_store.client.shared.Empty
	33, // 27: event_store.client.streams.ReadReq.Options.AllOptions.end:type_name -> event_store.client.shared.Empty
	16, // 28: event_store.client.streams.ReadReq.Options.FilterOptions.stream_identifier:type_name -> event_store.client.streams.ReadReq.Options.FilterOptions.Expression
	16, // 29: event_store.client.streams.ReadReq.Options.FilterOptions.event_type:type_name -> event_store.client.streams.ReadReq.Options.FilterOptions.Expression
	33, // 30: event_store.client.streams.ReadReq.Options.FilterOptions.count:type_name -> event_store.client.shared.Empty
	33, // 31: event_store.client.streams.ReadReq.Options.UUIDOption.structured:type_name -> event_store.client.shared.Empty
	33, // 32: event_store.client.streams.ReadReq.Options.UUIDOption.string:type_name -> event_store.client.shared.Empty
	21, // 33: event_store.client.streams.ReadResp.ReadEvent.event:type_name -> event_store.client.streams.ReadResp.ReadEvent.RecordedEvent
	21, // 34: event_store.client.streams.ReadResp.ReadEvent.link:type_name -> event_store.client.streams.ReadResp.ReadEvent.RecordedEvent
	33, // 35: event_store.client.streams.ReadResp.ReadEvent.no_position:type_name -> event_store.client.shared.Empty
	34, // 36: event_store.client.streams.ReadResp.StreamNotFound.stream_identifier:type_name -> event_store.client.shared.StreamIdentifier
	35, // 37: event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.id:type_name -> event_store.client.shared.UUID
	34, // 38: event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.stream_identifier:type_name -> event_store.client.shared.StreamIdentifier
	22, // 39: event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.metadata:type_name -> event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.MetadataEntry
	34, // 40: event_store.client.streams.AppendReq.Options.stream_identifier:type_name -> event_store.client.shared.StreamIdentifier
	33, // 41: event_store.client.streams.AppendReq.Options.no_stream:type_name -> event_store.client.shared.Empty
	33, // 42: event_store.client.streams.AppendReq.Options.any:type_name -> event_store.client.shared.Empty
	33, // 43: event_store.client.streams.AppendReq.Options.stream_exists:type_name -> event_store.client.shared.Empty
	35, // 44: event_store.client.streams.AppendReq.ProposedMessage.id:type_name -> event_store.client.shared.UUID
	25, // 45: event_store.client.streams.AppendReq.ProposedMessage.metadata:type_name -> event_store.client.streams.AppendReq.ProposedMessage.MetadataEntry
	33, // 46: event_store.client.streams.AppendResp.Success.no_stream:type_name -> event_store.client.shared.Empty
	26, // 47: event_store.client.streams.AppendResp.Success.position:type_name -> event_store.client.streams.AppendResp.Position
	33, // 48: event_store.client.streams.AppendResp.Success.no_position:type_name -> event_store.client.shared.Empty
	33, // 49: event_store.client.streams.AppendResp.WrongExpectedVersion.no_stream:type_name -> event_store.client.shared.Empty
	33, // 50: event_store.client.streams.AppendResp.WrongExpectedVersion.any:type_name -> event_store.client.shared.Empty
	33, // 51: event_store.client.streams.AppendResp.WrongExpectedVersion.stream_exists:type_name -> event_store.client.shared.Empty
	34, // 52: event_store.client.streams.DeleteReq.Options.stream_identifier:type_name -> event_store.client.shared.StreamIdentifier
	33, // 53: event_store.client.streams.DeleteReq.Options.no_stream:type_name -> event_store.client.shared.Empty
	33, // 54: event_store.client.streams.DeleteReq.Options.any:type_name -> event_store.client.shared.Empty
	33, // 55: event_store.client.streams.DeleteReq.Options.stream_exists:type_name -> event_store.client.shared.Empty
	34, // 56: event_store.client.streams.TombstoneReq.Options.stream_identifier:type_name -> event_store.client.shared.StreamIdentifier
	33, // 57: event_store.client.streams.TombstoneReq.Options.no_stream:type_name -> event_store.client.shared.Empty
	33, // 58: event_store.client.streams.TombstoneReq.Options.any:type_name -> event_store.client.shared.Empty
	33, // 59: event_store.client.streams.TombstoneReq.Options.stream_exists:type_name -> event_store.client.shared.Empty
	1,  // 60: event_store.client.streams.Streams.Read:input_type -> event_store.client.streams.ReadReq
	3,  // 61: event_store.client.streams.Streams.Append:input_type -> event_store.client.streams.AppendReq
	5,  // 62: event_store.client.streams.Streams.Delete:input_type -> event_store.client.streams.DeleteReq
	7,  // 63: event_store.client.streams.Streams.Tombstone:input_type -> event_store.client.streams.TombstoneReq
	2,  // 64: event_store.client.streams.Streams.Read:output_type -> event_store.client.streams.ReadResp
	4,  // 65: event_store.client.streams.Streams.Append:output_type -> event_store.client.streams.AppendResp
	6,  // 66: event_store.client.streams.Streams.Delete:output_type -> event_store.client.streams.DeleteResp
	8,  // 67: event_store.client.streams.Streams.Tombstone:output_type -> event_store.client.streams.TombstoneResp
	64, // [64:68] is the sub-list for method output_type
	60, // [60:64] is the sub-list for method input_type
	60, // [60:60] is the sub-list for extension type_name
	60, // [60:60] is the sub-list for extension extendee
	0,  // [0:60] is the sub-list for field type_name
}

func init() { file_streams_proto_init() }
func file_streams_proto_init() {
	if File_streams_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_streams_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TombstoneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TombstoneResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadReq_Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadReq_Options_StreamOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadReq_Options_AllOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadReq_Options_SubscriptionOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadReq_Options_Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadReq_Options_FilterOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadReq_Options_UUIDOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadReq_Options_FilterOptions_Expression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadResp_ReadEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadResp_SubscriptionConfirmation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadResp_Checkpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadResp_StreamNotFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadResp_ReadEvent_RecordedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendReq_Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendReq_ProposedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendResp_Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendResp_Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendResp_WrongExpectedVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReq_Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResp_Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TombstoneReq_Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streams_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TombstoneResp_Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_streams_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ReadResp_Event)(nil),
		(*ReadResp_Confirmation)(nil),
		(*ReadResp_Checkpoint_)(nil),
		(*ReadResp_StreamNotFound_)(nil),
	}
	file_streams_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*AppendReq_Options_)(nil),
		(*AppendReq_ProposedMessage_)(nil),
	}
	file_streams_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*AppendResp_Success_)(nil),
		(*AppendResp_WrongExpectedVersion_)(nil),
	}
	file_streams_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*DeleteResp_Position_)(nil),
		(*DeleteResp_NoPosition)(nil),
	}
	file_streams_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*TombstoneResp_Position_)(nil),
		(*TombstoneResp_NoPosition)(nil),
	}
	file_streams_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ReadReq_Options_Stream)(nil),
		(*ReadReq_Options_All)(nil),
		(*ReadReq_Options_Count)(nil),
		(*ReadReq_Options_Subscription)(nil),
		(*ReadReq_Options_Filter)(nil),
		(*ReadReq_Options_NoFilter)(nil),
	}
	file_streams_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*ReadReq_Options_StreamOptions_Revision)(nil),
		(*ReadReq_Options_StreamOptions_Start)(nil),
		(*ReadReq_Options_StreamOptions_End)(nil),
	}
	file_streams_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*ReadReq_Options_AllOptions_Position)(nil),
		(*ReadReq_Options_AllOptions_Start)(nil),
		(*ReadReq_Options_AllOptions_End)(nil),
	}
	file_streams_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*ReadReq_Options_FilterOptions_StreamIdentifier)(nil),
		(*ReadReq_Options_FilterOptions_EventType)(nil),
		(*ReadReq_Options_FilterOptions_Max)(nil),
		(*ReadReq_Options_FilterOptions_Count)(nil),
	}
	file_streams_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*ReadReq_Options_UUIDOption_Structured)(nil),
		(*ReadReq_Options_UUIDOption_String_)(nil),
	}
	file_streams_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*ReadResp_ReadEvent_CommitPosition)(nil),
		(*ReadResp_ReadEvent_NoPosition)(nil),
	}
	file_streams_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*AppendReq_Options_Revision)(nil),
		(*AppendReq_Options_NoStream)(nil),
		(*AppendReq_Options_Any)(nil),
		(*AppendReq_Options_StreamExists)(nil),
	}
	file_streams_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*AppendResp_Success_CurrentRevision)(nil),
		(*AppendResp_Success_NoStream)(nil),
		(*AppendResp_Success_Position)(nil),
		(*AppendResp_Success_NoPosition)(nil),
	}
	file_streams_proto_msgTypes[27].OneofWrappers = []interface{}{
		(*AppendResp_WrongExpectedVersion_CurrentRevision)(nil),
		(*AppendResp_WrongExpectedVersion_NoStream)(nil),
		(*AppendResp_WrongExpectedVersion_ExpectedRevision)(nil),
		(*AppendResp_WrongExpectedVersion_Any)(nil),
		(*AppendResp_WrongExpectedVersion_StreamExists)(nil),
	}
	file_streams_proto_msgTypes[28].OneofWrappers = []interface{}{
		(*DeleteReq_Options_Revision)(nil),
		(*DeleteReq_Options_NoStream)(nil),
		(*DeleteReq_Options_Any)(nil),
		(*DeleteReq_Options_StreamExists)(nil),
	}
	file_streams_proto_msgTypes[30].OneofWrappers = []interface{}{
		(*TombstoneReq_Options_Revision)(nil),
		(*TombstoneReq_Options_NoStream)(nil),
		(*TombstoneReq_Options_Any)(nil),
		(*TombstoneReq_Options_StreamExists)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_streams_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_streams_proto_goTypes,
		DependencyIndexes: file_streams_proto_depIdxs,
		EnumInfos:         file_streams_proto_enumTypes,
		MessageInfos:      file_streams_proto_msgTypes,
	}.Build()
	File_streams_proto = out.File
	file_streams_proto_rawDesc = nil
	file_streams_proto_goTypes = nil
	file_streams_proto_depIdxs = nil
}
